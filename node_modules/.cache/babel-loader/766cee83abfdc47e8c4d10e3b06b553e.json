{"ast":null,"code":"import _classCallCheck from \"/Users/jiahaoyu/Desktop/streamy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiahaoyu/Desktop/streamy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiahaoyu/Desktop/streamy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiahaoyu/Desktop/streamy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiahaoyu/Desktop/streamy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiahaoyu/Desktop/streamy/src/components/googleAuth.js\";\nimport React from 'react';\nimport { clientId } from './clientId';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: null\n    };\n\n    _this.onSignIn = function () {\n      _this.props.signIn();\n    };\n\n    _this.onSignOut = function () {\n      _this.props.signOut(); // window.gapi.auth2.getAuthInstance().signOut()\n\n    };\n\n    _this.onAuthChange = function (isSignedIn) {\n      if (isSignedIn) {\n        _this.props.signIn();\n      } else {\n        _this.props.signOut();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: clientId,\n          scope: 'email'\n        }).then(function () {\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.onAuthChange(_this2.auth.isSignedIn.get());\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    }\n  }, {\n    key: \"renderAuthButton\",\n    value: function renderAuthButton() {\n      console.log(this.props.auth);\n\n      if (this.props.auth === null) {\n        return null;\n      } else if (this.props.auth) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOut,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), \"Sign out!\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: this.onSignIn,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), \"Sign in!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('state: ', state);\n  return {\n    auth: state.auth.isSignIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/jiahaoyu/Desktop/streamy/src/components/googleAuth.js"],"names":["React","clientId","connect","signIn","signOut","GoogleAuth","state","isSignedIn","onSignIn","props","onSignOut","onAuthChange","window","gapi","load","client","init","scope","then","auth","auth2","getAuthInstance","get","listen","console","log","renderAuthButton","Component","mapStateToProps","isSignIn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,UAAU,EAAE;AAAd,K;;UAeRC,Q,GAAW,YAAM;AACf,YAAKC,KAAL,CAAWN,MAAX;AACD,K;;UACDO,S,GAAY,YAAM;AAChB,YAAKD,KAAL,CAAWL,OAAX,GADgB,CAEhB;;AACD,K;;UAyBDO,Y,GAAe,UAACJ,UAAD,EAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,cAAKE,KAAL,CAAWN,MAAX;AACD,OAFD,MAGK;AACH,cAAKM,KAAL,CAAWL,OAAX;AACD;AACF,K;;;;;;;wCAnDmB;AAAA;;AAClBQ,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBf,UAAAA,QAAQ,EAAEA,QADY;AAEtBgB,UAAAA,KAAK,EAAE;AAFe,SAAxB,EAGGC,IAHH,CAGQ,YAAM;AACZ,UAAA,MAAI,CAACC,IAAL,GAAYP,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAACV,YAAL,CAAkB,MAAI,CAACQ,IAAL,CAAUZ,UAAV,CAAqBe,GAArB,EAAlB;;AACA,UAAA,MAAI,CAACH,IAAL,CAAUZ,UAAV,CAAqBgB,MAArB,CAA4B,MAAI,CAACZ,YAAjC;AACD,SAPD;AAQD,OATD;AAUD;;;uCAUkB;AACjBa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWU,IAAvB;;AACA,UAAI,KAAKV,KAAL,CAAWU,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,eAAO,IAAP;AACD,OAFD,MAGK,IAAI,KAAKV,KAAL,CAAWU,IAAf,EAAqB;AACxB,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKT,SAAtB;AAAiC,UAAA,SAAS,EAAC,sBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,cADF;AAMD,OAPI,MAQA;AACH,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKF,QAAtB;AAAgC,UAAA,SAAS,EAAC,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD;AACF;;;6BAUQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKkB,gBAAL,EAAN,CADF;AAGD;;;;EA3DsB1B,KAAK,CAAC2B,S;;AA8D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACtB,KAAD,EAAW;AACjCkB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBnB,KAAvB;AACA,SAAO;AAACa,IAAAA,IAAI,EAAEb,KAAK,CAACa,IAAN,CAAWU;AAAlB,GAAP;AACD,CAHD;;AAKA,eAAe3B,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,MAAM,EAANA,MAAF;AAAUC,EAAAA,OAAO,EAAPA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { clientId } from './clientId';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: clientId,\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      })\n    })\n  }\n\n  onSignIn = () => {\n    this.props.signIn();\n  }\n  onSignOut = () => {\n    this.props.signOut();\n    // window.gapi.auth2.getAuthInstance().signOut()\n  }\n\n  renderAuthButton() {\n    console.log(this.props.auth)\n    if (this.props.auth === null) {\n      return null\n    }\n    else if (this.props.auth) {\n      return (\n        <button onClick={this.onSignOut} className='ui red google button'>\n          <i className='google icon' />\n          Sign out!\n        </button>\n      )\n    }\n    else {\n      return (\n        <button onClick={this.onSignIn} className='ui red google button'>\n          <i className='google icon' />\n          Sign in!\n        </button>\n      )\n    }\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn();\n    }\n    else {\n      this.props.signOut();\n    }\n  }\n  render() {\n    return (\n      <div>{this.renderAuthButton()}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state: ', state);\n  return {auth: state.auth.isSignIn}\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}